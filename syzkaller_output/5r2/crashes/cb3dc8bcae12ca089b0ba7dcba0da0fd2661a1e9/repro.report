==================================================================
BUG: KASAN: global-out-of-bounds in intel_pmu_lbr_read_64+0x959/0x960 arch/x86/events/intel/lbr.c:844
Read of size 4 at addr ffffffff9960e8bc by task syz-executor385/390

CPU: 0 PID: 390 Comm: syz-executor385 Not tainted 5.15.79 #3
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <NMI>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x6e/0x91 lib/dump_stack.c:106
 print_address_description.constprop.0+0x1f/0x140 mm/kasan/report.c:256
 __kasan_report mm/kasan/report.c:442 [inline]
 kasan_report.cold+0x7f/0x11b mm/kasan/report.c:459
 intel_pmu_lbr_read_64+0x959/0x960 arch/x86/events/intel/lbr.c:844
 intel_pmu_lbr_read+0x165/0x1c0 arch/x86/events/intel/lbr.c:1015
 intel_pmu_handle_irq+0x268/0xe70 arch/x86/events/intel/core.c:2946
 perf_event_nmi_handler arch/x86/events/core.c:1744 [inline]
 perf_event_nmi_handler+0x48/0x70 arch/x86/events/core.c:1730
 nmi_handle+0xa0/0x200 arch/x86/kernel/nmi.c:140
 default_do_nmi+0x3e/0xe0 arch/x86/kernel/nmi.c:334
 exc_nmi+0xfd/0x130 arch/x86/kernel/nmi.c:510
 end_repeat_nmi+0x16/0x67
RIP: 0010:arch_static_branch arch/x86/include/asm/jump_label.h:27 [inline]
RIP: 0010:static_key_false include/linux/jump_label.h:212 [inline]
RIP: 0010:native_write_msr arch/x86/include/asm/msr.h:156 [inline]
RIP: 0010:wrmsrl arch/x86/include/asm/msr.h:271 [inline]
RIP: 0010:__intel_pmu_enable_all.constprop.0+0x99/0x280 arch/x86/events/intel/core.c:2171
Code: ea 03 80 3c 02 00 0f 85 ce 01 00 00 4c 8b a3 c0 0c 00 00 b9 8f 03 00 00 49 f7 d4 49 21 ec 4c 89 e2 44 89 e0 48 c1 ea 20 0f 30 <0f> 1f 44 00 00 e8 fd f1 39 00 e8 f8 f1 39 00 4c 8d a3 00 02 00 00
RSP: 0018:ffff888004c97a30 EFLAGS: 00000002
RAX: 000000000000000f RBX: ffff88806d2217e0 RCX: 000000000000038f
RDX: 0000000000000007 RSI: 0000000000000000 RDI: ffff88806d2224a0
RBP: 000000070000000f R08: 0000000000000006 R09: 0000000000000801
R10: 0000000000000000 R11: 0000000000000001 R12: 000000070000000f
R13: 000000000000030a R14: ffff88806d2217e0 R15: dffffc0000000000
 </NMI>
 <TASK>
 x86_pmu_enable+0x560/0xcc0 arch/x86/events/core.c:1346
 perf_pmu_enable kernel/events/core.c:1238 [inline]
 perf_pmu_enable kernel/events/core.c:1234 [inline]
 ctx_resched+0x25a/0x320 kernel/events/core.c:2803
 __perf_install_in_context+0x376/0x440 kernel/events/core.c:2870
 remote_function kernel/events/core.c:92 [inline]
 remote_function+0x123/0x1b0 kernel/events/core.c:72
 generic_exec_single+0x1d4/0x2e0 kernel/smp.c:518
 smp_call_function_single+0x2fa/0x3d0 kernel/smp.c:755
 task_function_call kernel/events/core.c:120 [inline]
 perf_install_in_context+0x2e6/0x6b0 kernel/events/core.c:2974
 __do_sys_perf_event_open+0x1ce2/0x2a70 kernel/events/core.c:12578
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x38/0x90 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x61/0xcb
RIP: 0033:0x7f31170d670d
Code: c3 e8 a7 1f 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff0cdf0f88 EFLAGS: 00000246 ORIG_RAX: 000000000000012a
RAX: ffffffffffffffda RBX: 0000000000007230 RCX: 00007f31170d670d
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000020000040
RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
R10: 00000000ffffffff R11: 0000000000000246 R12: 00007fff0cdf0f9c
R13: 431bde82d7b634db R14: 00007f31171534f0 R15: 0000000000000001
 </TASK>

The buggy address belongs to the variable:
 lbr_desc+0x1c/0x340

Memory state around the buggy address:
 ffffffff9960e780: 00 00 00 00 00 f9 f9 f9 f9 f9 f9 f9 00 00 00 00
 ffffffff9960e800: 00 00 00 00 f9 f9 f9 f9 00 00 00 00 00 00 00 00
>ffffffff9960e880: f9 f9 f9 f9 00 00 00 04 f9 f9 f9 f9 00 03 f9 f9
                                        ^
 ffffffff9960e900: f9 f9 f9 f9 00 06 f9 f9 f9 f9 f9 f9 00 05 f9 f9
 ffffffff9960e980: f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9 00 00 00 00
==================================================================
INFO: NMI handler (perf_event_nmi_handler) took too long to run: 1.664 msecs
perf: interrupt took too long (16329 > 16208), lowering kernel.perf_event_max_sample_rate to 12000
perf: interrupt took too long (25756 > 25578), lowering kernel.perf_event_max_sample_rate to 7000
perf: interrupt took too long (32588 > 32195), lowering kernel.perf_event_max_sample_rate to 6000
perf: interrupt took too long (40851 > 40735), lowering kernel.perf_event_max_sample_rate to 4000
perf: interrupt took too long (51181 > 51063), lowering kernel.perf_event_max_sample_rate to 3000
perf: interrupt took too long (64274 > 63976), lowering kernel.perf_event_max_sample_rate to 3000
INFO: NMI handler (perf_event_nmi_handler) took too long to run: 2.114 msecs
perf: interrupt took too long (82095 > 80342), lowering kernel.perf_event_max_sample_rate to 2000
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	03 80 3c 02 00 0f    	add    0xf00023c(%rax),%eax
   6:	85 ce                	test   %ecx,%esi
   8:	01 00                	add    %eax,(%rax)
   a:	00 4c 8b a3          	add    %cl,-0x5d(%rbx,%rcx,4)
   e:	c0 0c 00 00          	rorb   $0x0,(%rax,%rax,1)
  12:	b9 8f 03 00 00       	mov    $0x38f,%ecx
  17:	49 f7 d4             	not    %r12
  1a:	49 21 ec             	and    %rbp,%r12
  1d:	4c 89 e2             	mov    %r12,%rdx
  20:	44 89 e0             	mov    %r12d,%eax
  23:	48 c1 ea 20          	shr    $0x20,%rdx
  27:	0f 30                	wrmsr
* 29:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1) <-- trapping instruction
  2e:	e8 fd f1 39 00       	call   0x39f230
  33:	e8 f8 f1 39 00       	call   0x39f230
  38:	4c 8d a3 00 02 00 00 	lea    0x200(%rbx),%r12
